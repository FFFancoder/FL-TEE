{"$message_type":"diagnostic","message":"unused import: `crate::marker::ContiguousMemory`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/home/ff/Federated-Learning-PyTorch-master/secure_aggregation/incubator-teaclave-sgx-sdk/sgx_types/src/macros.rs","byte_start":811,"byte_end":842,"line_start":18,"line_end":18,"column_start":9,"column_end":40,"is_primary":true,"text":[{"text":"pub use crate::marker::ContiguousMemory;","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/home/ff/Federated-Learning-PyTorch-master/secure_aggregation/incubator-teaclave-sgx-sdk/sgx_types/src/macros.rs","byte_start":803,"byte_end":843,"line_start":18,"line_end":18,"column_start":1,"column_end":41,"is_primary":true,"text":[{"text":"pub use crate::marker::ContiguousMemory;","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::marker::ContiguousMemory`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ff/Federated-Learning-PyTorch-master/secure_aggregation/incubator-teaclave-sgx-sdk/sgx_types/src/macros.rs:18:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use crate::marker::ContiguousMemory;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `core::clone::Clone`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/home/ff/Federated-Learning-PyTorch-master/secure_aggregation/incubator-teaclave-sgx-sdk/sgx_types/src/macros.rs","byte_start":852,"byte_end":870,"line_start":19,"line_end":19,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"pub use core::clone::Clone;","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/home/ff/Federated-Learning-PyTorch-master/secure_aggregation/incubator-teaclave-sgx-sdk/sgx_types/src/macros.rs","byte_start":844,"byte_end":871,"line_start":19,"line_end":19,"column_start":1,"column_end":28,"is_primary":true,"text":[{"text":"pub use core::clone::Clone;","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `core::clone::Clone`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ff/Federated-Learning-PyTorch-master/secure_aggregation/incubator-teaclave-sgx-sdk/sgx_types/src/macros.rs:19:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use core::clone::Clone;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `core::default::Default`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/home/ff/Federated-Learning-PyTorch-master/secure_aggregation/incubator-teaclave-sgx-sdk/sgx_types/src/macros.rs","byte_start":880,"byte_end":902,"line_start":20,"line_end":20,"column_start":9,"column_end":31,"is_primary":true,"text":[{"text":"pub use core::default::Default;","highlight_start":9,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/home/ff/Federated-Learning-PyTorch-master/secure_aggregation/incubator-teaclave-sgx-sdk/sgx_types/src/macros.rs","byte_start":872,"byte_end":903,"line_start":20,"line_end":20,"column_start":1,"column_end":32,"is_primary":true,"text":[{"text":"pub use core::default::Default;","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `core::default::Default`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ff/Federated-Learning-PyTorch-master/secure_aggregation/incubator-teaclave-sgx-sdk/sgx_types/src/macros.rs:20:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use core::default::Default;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `core::marker::Copy`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/home/ff/Federated-Learning-PyTorch-master/secure_aggregation/incubator-teaclave-sgx-sdk/sgx_types/src/macros.rs","byte_start":912,"byte_end":930,"line_start":21,"line_end":21,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"pub use core::marker::Copy;","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/home/ff/Federated-Learning-PyTorch-master/secure_aggregation/incubator-teaclave-sgx-sdk/sgx_types/src/macros.rs","byte_start":904,"byte_end":931,"line_start":21,"line_end":21,"column_start":1,"column_end":28,"is_primary":true,"text":[{"text":"pub use core::marker::Copy;","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `core::marker::Copy`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ff/Federated-Learning-PyTorch-master/secure_aggregation/incubator-teaclave-sgx-sdk/sgx_types/src/macros.rs:21:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use core::marker::Copy;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `core::ptr`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/home/ff/Federated-Learning-PyTorch-master/secure_aggregation/incubator-teaclave-sgx-sdk/sgx_types/src/macros.rs","byte_start":998,"byte_end":1007,"line_start":24,"line_end":24,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub use core::ptr;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/home/ff/Federated-Learning-PyTorch-master/secure_aggregation/incubator-teaclave-sgx-sdk/sgx_types/src/macros.rs","byte_start":990,"byte_end":1008,"line_start":24,"line_end":24,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"pub use core::ptr;","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `core::ptr`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ff/Federated-Learning-PyTorch-master/secure_aggregation/incubator-teaclave-sgx-sdk/sgx_types/src/macros.rs:24:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use core::ptr;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `sgx_uswitchless_config_t` does not permit zero-initialization","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/ff/Federated-Learning-PyTorch-master/secure_aggregation/incubator-teaclave-sgx-sdk/sgx_types/src/types.rs","byte_start":37582,"byte_end":37601,"line_start":1189,"line_end":1189,"column_start":61,"column_end":80,"is_primary":true,"text":[{"text":"        let mut config: sgx_uswitchless_config_t = unsafe { core::mem::zeroed() };","highlight_start":61,"highlight_end":80}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/ff/Federated-Learning-PyTorch-master/secure_aggregation/incubator-teaclave-sgx-sdk/sgx_types/src/types.rs","byte_start":37582,"byte_end":37601,"line_start":1189,"line_end":1189,"column_start":61,"column_end":80,"is_primary":true,"text":[{"text":"        let mut config: sgx_uswitchless_config_t = unsafe { core::mem::zeroed() };","highlight_start":61,"highlight_end":80}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function pointers must be non-null (in this struct field)","code":null,"level":"note","spans":[{"file_name":"/home/ff/Federated-Learning-PyTorch-master/secure_aggregation/incubator-teaclave-sgx-sdk/sgx_types/src/types.rs","byte_start":37337,"byte_end":37426,"line_start":1184,"line_end":1184,"column_start":5,"column_end":94,"is_primary":true,"text":[{"text":"    pub callback_func: [sgx_uswitchless_worker_callback_t; _SGX_USWITCHLESS_WORKER_EVENT_NUM],","highlight_start":5,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"`#[warn(invalid_value)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `sgx_uswitchless_config_t` does not permit zero-initialization\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ff/Federated-Learning-PyTorch-master/secure_aggregation/incubator-teaclave-sgx-sdk/sgx_types/src/types.rs:1189:61\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut config: sgx_uswitchless_config_t = unsafe { core::mem::zeroed() };\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function pointers must be non-null (in this struct field)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ff/Federated-Learning-PyTorch-master/secure_aggregation/incubator-teaclave-sgx-sdk/sgx_types/src/types.rs:1184:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub callback_func: [sgx_uswitchless_worker_callback_t; _SGX_USWITCHLESS_WORKER_EVENT_NUM],\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(invalid_value)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"6 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 6 warnings emitted\u001b[0m\n\n"}
